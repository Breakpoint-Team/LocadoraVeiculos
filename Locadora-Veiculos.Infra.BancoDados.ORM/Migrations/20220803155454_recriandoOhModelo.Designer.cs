// <auto-generated />
using System;
using Locadora_Veiculos.Infra.BancoDados.ORM.Compartilhado;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Locadora_Veiculos.Infra.BancoDados.ORM.Migrations
{
    [DbContext(typeof(LocadoraVeiculosDbContext))]
    [Migration("20220803155454_recriandoOhModelo")]
    partial class recriandoOhModelo
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LocacaoTaxa", b =>
                {
                    b.Property<Guid>("LocacoesId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("TaxasSelecionadasId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("LocacoesId", "TaxasSelecionadasId");

                    b.HasIndex("TaxasSelecionadasId");

                    b.ToTable("LocacaoTaxa");
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloCliente.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Documento")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<int>("TipoCliente")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("TBCliente");
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloCondutor.Condutor", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClienteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("ClienteId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Cnh")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.Property<DateTime>("DataValidadeCnh")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("varchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.HasIndex("ClienteId1");

                    b.ToTable("TBCondutor");
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloFuncionario.Funcionario", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DataAdmissao")
                        .HasColumnType("datetime2");

                    b.Property<bool>("EhAdmin")
                        .HasColumnType("bit");

                    b.Property<bool>("EstaAtivo")
                        .HasColumnType("bit");

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<decimal>("Salario")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.ToTable("TBFuncionario");
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloGrupoVeiculos.GrupoVeiculos", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("TBGrupoVeiculos");
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloLocacao.Locacao", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CondutorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime?>("DataDevolucaoEfetiva")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataDevolucaoPrevista")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataLocacao")
                        .HasColumnType("datetime2");

                    b.Property<int?>("NivelTanqueDevolucao")
                        .HasColumnType("int");

                    b.Property<Guid>("PlanoCobrancaId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("PlanoCobrancaId1")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("QuilometragemFinalVeiculo")
                        .HasColumnType("int");

                    b.Property<int>("QuilometragemInicialVeiculo")
                        .HasColumnType("int");

                    b.Property<int>("StatusLocacao")
                        .HasColumnType("int");

                    b.Property<int>("TipoPlanoSelecionado")
                        .HasColumnType("int");

                    b.Property<decimal?>("ValorTotalEfetivo")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("ValorTotalPrevisto")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("VeiculoId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CondutorId");

                    b.HasIndex("PlanoCobrancaId");

                    b.HasIndex("PlanoCobrancaId1");

                    b.HasIndex("VeiculoId")
                        .IsUnique();

                    b.ToTable("TBLocacao");
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloPlanoCobranca.PlanoCobranca", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("DiarioValorDia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("DiarioValorKm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid>("GrupoVeiculosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("KmControladoLimiteKm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("KmControladoValorDia")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("KmControladoValorKm")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("KmLivreValorDia")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoVeiculosId")
                        .IsUnique();

                    b.ToTable("TBPlanoCobranca");
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloTaxa.Taxa", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<int>("TipoCalculo")
                        .HasColumnType("int");

                    b.Property<int>("TipoTaxa")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("TBTaxa");
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloVeiculo.Veiculo", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Ano")
                        .HasColumnType("int");

                    b.Property<decimal>("CapacidadeTanque")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Cor")
                        .IsRequired()
                        .HasColumnType("varchar(100)");

                    b.Property<Guid>("GrupoVeiculosId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("Imagem")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("Marca")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Placa")
                        .IsRequired()
                        .HasColumnType("varchar(7)");

                    b.Property<int>("QuilometragemPercorrida")
                        .HasColumnType("int");

                    b.Property<int>("StatusVeiculo")
                        .HasColumnType("int");

                    b.Property<string>("TipoCombustivel")
                        .IsRequired()
                        .HasColumnType("varchar(300)");

                    b.HasKey("Id");

                    b.HasIndex("GrupoVeiculosId");

                    b.ToTable("TBVeiculo");
                });

            modelBuilder.Entity("LocacaoTaxa", b =>
                {
                    b.HasOne("Locadora_Veiculos.Dominio.ModuloLocacao.Locacao", null)
                        .WithMany()
                        .HasForeignKey("LocacoesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Locadora_Veiculos.Dominio.ModuloTaxa.Taxa", null)
                        .WithMany()
                        .HasForeignKey("TaxasSelecionadasId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloCliente.Cliente", b =>
                {
                    b.OwnsOne("Locadora_Veiculos.Dominio.ModuloEndereco.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("ClienteId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("varchar(300)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("varchar(300)");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasColumnType("varchar(3)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnType("varchar(300)");

                            b1.Property<int>("Numero")
                                .HasColumnType("int");

                            b1.HasKey("ClienteId");

                            b1.ToTable("TBCliente");

                            b1.WithOwner()
                                .HasForeignKey("ClienteId");
                        });

                    b.Navigation("Endereco")
                        .IsRequired();
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloCondutor.Condutor", b =>
                {
                    b.HasOne("Locadora_Veiculos.Dominio.ModuloCliente.Cliente", "Cliente")
                        .WithMany()
                        .HasForeignKey("ClienteId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Locadora_Veiculos.Dominio.ModuloCliente.Cliente", null)
                        .WithMany("Condutores")
                        .HasForeignKey("ClienteId1");

                    b.OwnsOne("Locadora_Veiculos.Dominio.ModuloEndereco.Endereco", "Endereco", b1 =>
                        {
                            b1.Property<Guid>("CondutorId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<string>("Bairro")
                                .IsRequired()
                                .HasColumnType("varchar(300)");

                            b1.Property<string>("Cidade")
                                .IsRequired()
                                .HasColumnType("varchar(300)");

                            b1.Property<string>("Estado")
                                .IsRequired()
                                .HasColumnType("varchar(3)");

                            b1.Property<string>("Logradouro")
                                .IsRequired()
                                .HasColumnType("varchar(300)");

                            b1.Property<int>("Numero")
                                .HasColumnType("int");

                            b1.HasKey("CondutorId");

                            b1.ToTable("TBCondutor");

                            b1.WithOwner()
                                .HasForeignKey("CondutorId");
                        });

                    b.Navigation("Cliente");

                    b.Navigation("Endereco")
                        .IsRequired();
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloLocacao.Locacao", b =>
                {
                    b.HasOne("Locadora_Veiculos.Dominio.ModuloCondutor.Condutor", "Condutor")
                        .WithMany()
                        .HasForeignKey("CondutorId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Locadora_Veiculos.Dominio.ModuloPlanoCobranca.PlanoCobranca", "PlanoCobranca")
                        .WithMany()
                        .HasForeignKey("PlanoCobrancaId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Locadora_Veiculos.Dominio.ModuloPlanoCobranca.PlanoCobranca", null)
                        .WithMany("Locacoes")
                        .HasForeignKey("PlanoCobrancaId1");

                    b.HasOne("Locadora_Veiculos.Dominio.ModuloVeiculo.Veiculo", "Veiculo")
                        .WithOne()
                        .HasForeignKey("Locadora_Veiculos.Dominio.ModuloLocacao.Locacao", "VeiculoId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Condutor");

                    b.Navigation("PlanoCobranca");

                    b.Navigation("Veiculo");
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloPlanoCobranca.PlanoCobranca", b =>
                {
                    b.HasOne("Locadora_Veiculos.Dominio.ModuloGrupoVeiculos.GrupoVeiculos", "GrupoVeiculos")
                        .WithOne()
                        .HasForeignKey("Locadora_Veiculos.Dominio.ModuloPlanoCobranca.PlanoCobranca", "GrupoVeiculosId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("GrupoVeiculos");
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloVeiculo.Veiculo", b =>
                {
                    b.HasOne("Locadora_Veiculos.Dominio.ModuloGrupoVeiculos.GrupoVeiculos", "GrupoVeiculos")
                        .WithMany()
                        .HasForeignKey("GrupoVeiculosId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("GrupoVeiculos");
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloCliente.Cliente", b =>
                {
                    b.Navigation("Condutores");
                });

            modelBuilder.Entity("Locadora_Veiculos.Dominio.ModuloPlanoCobranca.PlanoCobranca", b =>
                {
                    b.Navigation("Locacoes");
                });
#pragma warning restore 612, 618
        }
    }
}
